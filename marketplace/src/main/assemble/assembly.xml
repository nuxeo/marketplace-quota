<project name="quota-assembly" default="build" xmlns:nx="urn:nuxeo-build" xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <target name="build" description="Build Nuxeo Quota Marketplace package">
    <tstamp />
    <property name="outdir" value="${maven.project.build.directory}" />
    <delete failonerror="false" dir="${maven.project.build.directory}/marketplace" />
    <mkdir dir="${maven.project.build.directory}/marketplace" />
    <copy todir="${maven.project.build.directory}/marketplace">
      <fileset dir="src/main/resources" />
      <filterset>
        <filter token="VERSION" value="${marketplace.quota.version}" />
        <filter token="DISTRIB_VERSION" value="${nuxeo.distribution.version}" />
      </filterset>
    </copy>
    <copy todir="${maven.project.build.directory}">
      <!-- Base distribution EAR -->
      <artifact:file key="org.nuxeo.ecm.distribution:nuxeo-distribution-cap::zip" />
      <!-- Your custom EAR -->
      <artifact:file key="org.nuxeo.marketplace.quota:ear::zip" />
    </copy>
    <!-- Your MP only needs to include files not already provided by the base distribution -->
    <nx:zipdiff file1="${maven.project.build.directory}/ear-${marketplace.quota.version}.zip"
                file2="${maven.project.build.directory}/nuxeo-distribution-cap-${nuxeo.distribution.version}.zip"
                includesfile="${maven.project.build.directory}/includes"
                excludesfile="${maven.project.build.directory}/excludesfile"
                patternsetid="quota.versus.cap">
    </nx:zipdiff>
    <unzip src="${maven.project.build.directory}/ear-${marketplace.quota.version}.zip"
           dest="${maven.project.build.directory}/marketplace/install">
      <patternset refid="quota.versus.cap" />
    </unzip>

    <!-- Separate JSF-UI package -->
    <mkdir dir="${outdir}/marketplace/install/bundles-jsf-ui" />
    <move todir="${outdir}/marketplace/install/bundles-jsf-ui">
      <fileset dir="${outdir}/marketplace/install/bundles">
        <include name="nuxeo-quota-web-*.jar" />
      </fileset>
    </move>

    <!-- Generate install.xml file -->
    <var name="install.content" value="&lt;install&gt;" />
    <var name="install.content"
         value="${install.content}${line.separator}
     &lt;update file=&quot;${package.root}/install/bundles&quot; todir=&quot;${env.bundles}&quot; /&gt;" />
    <var name="install.content"
         value="${install.content}${line.separator}
     &lt;update file=&quot;${package.root}/install/bundles-jsf-ui&quot; todir=&quot;${env.bundles}&quot; if=&quot;Packages.contains('nuxeo-jsf-ui')&quot; /&gt;" />
    <if>
      <available file="${outdir}/marketplace/install/lib" />
      <then>
        <var name="install.content"
             value="${install.content}${line.separator}
     &lt;update file=&quot;${package.root}/install/lib&quot; todir=&quot;${env.lib}&quot; /&gt;" />
      </then>
    </if>
    <if>
      <available file="${outdir}/marketplace/install/templates" />
      <then>
        <var name="install.content"
             value="${install.content}${line.separator}
     &lt;copy dir=&quot;${package.root}/install/templates&quot; todir=&quot;${env.templates}&quot; overwrite=&quot;true&quot; /&gt;${line.separator}
     &lt;config addtemplate=&quot;quota&quot; /&gt;" />
      </then>
    </if>
    <var name="install.content" value="${install.content}${line.separator}
     &lt;/install&gt;${line.separator}" />
    <echo file="${outdir}/marketplace/install.xml" message="${install.content}" />

    <zip destfile="${maven.project.build.directory}/${maven.project.artifactId}-${marketplace.quota.version}.zip"
         basedir="${maven.project.build.directory}/marketplace" />
    <artifact:attach file="${maven.project.build.directory}/${maven.project.artifactId}-${marketplace.quota.version}.zip"
                     type="zip" />
  </target>

</project>
